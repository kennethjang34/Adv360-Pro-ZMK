
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

/ {
  behaviors {
    #include "macros.dtsi"

	hht:hold-preferred-hold-tap{
        compatible = "zmk,behavior-hold-tap";
		label="HOLD_PREFERRED_HOLD_TAP";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "hold-preferred";
        bindings = <&kp>, <&kp>;
    };
	hhtl:hold-preferred-hold-tap-lt{
        compatible = "zmk,behavior-hold-tap";
		label="HOLD_PREFERRED_HOLD_TAP_LT";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "hold-preferred";
        bindings = <&mo>, <&kp>;
    };
	bht:balanced-hold-tap{
        compatible = "zmk,behavior-hold-tap";
		label="BALANCED_PREFERRED_HOLD_TAP";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "balanced";
        bindings = <&kp>, <&kp>;
    };
	tht:tap-preferred-hold-tap{
        compatible = "zmk,behavior-hold-tap";
		label="TAP_PREFERRED_HOLD_TAP";
        #binding-cells = <2>;
        tapping-term-ms = <150>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };

  };

    keymap {
        compatible = "zmk,keymap";
        default_layer {
            bindings = <
        &mo 1  &kp N1                          &kp N2                &kp N3          &kp N4         &kp N5              &kp K_PLAY_PAUSE           &mo 3           &kp N6                   &kp N7     &kp N8             &kp N9                               &kp N0                       &mo 2
      &kp TAB   &kp Q                           &kp W                 &kp E           &kp R          &kp T                        &kp UP        &kp LEFT            &kp Y                    &kp U      &kp I              &kp O                                &kp P                    &kp BSLH
      &kp ESC   &kp A                           &kp S                 &kp D           &kp F          &kp G                      &kp DOWN           &mo 7        &kp SPACE                                      &kp RIGHT_GUI                                &mo 1                   &kp RIGHT                   &kp H    &kp J      &kp K    &kp L  &kp SEMI  &kp SQT
 &kp LEFT_SHIFT   &kp Z                           &kp X                 &kp C           &kp V          &kp B                         &none           &none     &kp LEFT_ALT                    &none      &none      &kp RIGHT_ALT                                &none                       &none                   &kp N    &kp M  &kp COMMA  &kp DOT  &kp FSLH    &mo 4
        &mo 1   &mo 2  &mt LEFT_CONTROL DOUBLE_QUOTES  &kp LEFT_PARENTHESIS  &kp UNDERSCORE  &kp BACKSPACE            &hht LEFT_SHIFT DOUBLE_QUOTES
	  	&kp LEFT_GUI  &kp RIGHT_CONTROL  &hhtl 4 ENTER  &kp SPACE          &hht LEFT_CONTROL TAB  &hht RIGHT_ALT RIGHT_PARENTHESIS  &tht RIGHT_GUI LEFT_BRACKET &kp RIGHT_BRACKET &kp TAB
            >;
        };
        layer_keypad {
            bindings = <
 &kp EQUAL     &kp N1         &kp N2            &kp N3             &kp N4           &kp N5            &trans      &mo 3       &kp N6  &kp KP_NUMLOCK  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
   &kp TAB      &kp Q          &kp W             &kp E              &kp R            &kp T            &trans     &trans  &kp KP_PLUS       &kp KP_N7     &kp KP_N8      &kp KP_N9     &kp KP_MINUS   &kp BSLH
   &kp ESC      &kp A          &kp S  &kp LEFT_BRACKET  &kp RIGHT_BRACKET            &kp G            &trans  &kp LCTRL     &kp LALT                                     &kp LGUI        &kp RCTRL     &trans    &kp KP_MINUS        &kp KP_N4  &kp KP_N5  &kp KP_N6   &kp KP_PLUS  &kp SQT
 &kp LSHFT      &kp Z  &kp LESS_THAN      &kp KP_EQUAL   &kp GREATER_THAN  &kp KP_MULTIPLY             &none      &none    &kp ENTER           &none         &none      &kp PG_UP            &none      &none  &kp UNDERSCORE        &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_ENTER    &mo 4
     &mo 2  &kp GRAVE          &mo 2      &kp KP_MINUS        &kp KP_PLUS         &kp BSPC            &trans  &kp SPACE    &kp PG_DN          &trans     &kp KP_N0      &kp SPACE        &kp COMMA    &kp DOT       &kp SLASH  &kp KP_MULTIPLY
            >;
        };

        layer_fn {
            bindings = <
 &kp F1  &kp F2        &kp F3            &kp F4            &kp F5  &kp F6            &tog 1   &mo 3  &kp F7  &kp F8  &kp F9                 &kp F10  &kp F11  &kp F12
 &trans  &trans        &trans            &trans            &trans  &trans             &none   &none  &trans  &trans  &trans  &trans   &trans   &trans
 &trans  &trans        &trans            &trans            &trans  &trans             &none  &trans  &trans                                  &trans   &trans    &none  &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans  &trans
 &trans  &trans  &kp K_VOL_DN  &kp K_PLAY_PAUSE  &kp K_PLAY_PAUSE  &trans             &none   &none  &trans   &none   &none                  &trans    &none    &none    &trans    &trans  &trans     &trans  &trans  &trans
 &trans  &trans     &kp LCTRL          &kp LALT          &kp LGUI  &trans            &trans  &trans  &trans  &trans  &trans                  &trans   &trans   &trans    &trans    &trans
            >;
        };

        layer_mod {
            bindings = <
        &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3     &bt BT_SEL 4                            &tog 5       &trans  &bt BT_SEL 0  &bt BT_SEL 1     &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                   &none
        &none         &none         &none         &none         &none            &none                       &bootloader  &bootloader         &none         &none            &none         &none         &none                   &none
 &kp CAPSLOCK         &none         &none         &none         &none            &none            &rgb_ug RGB_MEFS_CMD 5   &bt BT_CLR         &none                                   &bt BT_CLR    &bt BT_CLR  &rgb_ug RGB_MEFS_CMD 5   &none   &none   &none   &none   &none   &none
        &none         &none         &none         &none         &none            &none                             &none        &none         &none         &none            &none         &none         &none                   &none   &none   &none   &none   &none   &none   &none
       &trans        &trans         &none    &bl BL_INC    &bl BL_DEC  &rgb_ug RGB_TOG                        &bl BL_TOG        &none         &none    &bl BL_TOG  &rgb_ug RGB_TOG    &bl BL_INC    &bl BL_DEC                   &none   &none   &none
            >;
        };

        layer_Special_characters {
            bindings = <
       &trans      &trans           &trans                &trans                 &trans          &trans            &trans        &trans    &trans  &trans  &trans  &trans     &trans        &trans
       &trans   &kp GRAVE  &kp EXCLAMATION           &kp AT_SIGN              &kp POUND       &kp TILDE            &kp LT        &trans    &trans  &trans  &trans  &trans     &trans        &trans
 &kp QUESTION  &kp DOLLAR        &kp CARET         &kp AMPERSAND           &kp ASTERISK       &kp EQUAL            &kp GT  &kp QUESTION  &kp PIPE                  &trans     &trans        &trans             &trans  &trans      &kp COLON  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp DOUBLE_QUOTES
     &kp PIPE   &kp MINUS         &kp PLUS  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDERSCORE            &trans        &trans    &trans  &trans  &trans  &trans     &trans        &trans             &trans  &trans  &kp LESS_THAN      &kp KP_EQUAL   &kp GREATER_THAN             &trans
       &trans      &trans      &kp PERCENT        &kp LEFT_BRACE        &kp RIGHT_BRACE          &trans            &trans        &trans    &trans  &trans  &trans  &trans  &kp COLON  &kp KP_MINUS  &kp DOUBLE_QUOTES  &trans
            >;
        };

        layer_Linux {
            bindings = <
  &mo 1  &trans  &trans  &trans  &trans         &trans               &trans           &mo 3           &trans  &trans  &trans             &trans  &trans   &mo 2
 &trans  &trans  &trans  &trans  &trans         &trans               &trans          &trans           &trans  &trans  &trans             &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans         &trans               &trans           &mo 7        &kp SPACE                  &kp RIGHT_COMMAND   &mo 1  &trans  &trans           &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans         &trans               &trans          &trans     &kp LEFT_ALT  &trans  &trans      &kp RIGHT_ALT  &trans  &trans  &trans           &trans  &trans  &trans  &trans  &trans
  &mo 6   &mo 1  &trans  &trans  &trans  &kp BACKSPACE            &kp LCTRL  &kp LEFT_SHIFT  &kp RIGHT_SHIFT  &trans  &trans             &trans  &trans  &trans  &trans  &kp RIGHT_SHIFT
            >;
        };

        layer_linux_fn {
            bindings = <
 &kp F1  &kp F2  &kp F3                 &kp F4  &kp F5  &kp F6            &tog 1   &mo 3  &kp F7  &kp F8  &kp F9                       &kp F10  &kp F11  &kp F12
 &trans  &trans  &trans                 &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans   &trans   &trans
 &trans  &trans  &trans                 &trans  &trans  &trans            &trans  &trans  &trans                                        &trans   &trans   &trans  &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans                        &trans   &trans   &trans    &trans    &trans  &trans     &trans  &trans  &trans
 &trans   &mo 1  &trans                 &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans                        &trans   &trans   &trans    &trans    &trans
            >;
        };

        layer_MEDIA {
            bindings = <
 &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC   &kp C_CAPTIONS            &kp K_BACK     &kp C_FAST_FORWARD  &kp C_PIP            &tog 1   &mo 3  &kp K_PREV  &kp K_PLAY_PAUSE        &kp K_NEXT         &kp C_MUTE   &kp C_VOLUME_DOWN  &kp C_VOLUME_UP
               &trans                &trans  &trans      &kp LEFT_BRACKET      &kp RIGHT_BRACKET     &trans            &trans  &trans      &trans            &trans  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &trans           &trans
               &trans               &kp TAB    &kp BACKSPACE        &kp LEFT_BRACE        &kp RIGHT_BRACE     &trans            &trans   &mo 7      &trans                                                 &trans               &mo 1           &trans  &trans  &kp SPACE   &kp BACKSPACE      &kp TAB  &kp QUESTION  &trans
               &trans                &trans           &trans  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS     &trans            &trans  &trans      &trans            &trans            &trans             &trans              &trans           &trans  &trans     &trans  &kp UNDERSCORE  &kp PERCENT      &kp PIPE  &trans
               &trans                &trans           &trans                &trans                 &trans     &trans            &trans  &trans      &trans            &trans            &trans             &trans              &trans           &trans  &trans     &trans
            >;
        };

        layer_linux_Media {
            bindings = <
 &trans  &trans  &trans                 &trans                  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans                 &trans                  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans                 &trans                  &trans  &trans            &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans                 &trans                  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

    };
};
